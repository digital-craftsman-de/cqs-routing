imports:
  - { resource: services_test.yaml, env: 'test' }

services:

  # Request decoders
  DigitalCraftsman\CQSRouting\RequestDecoder\JsonRequestDecoder:
    autowire: true
    autoconfigure: true
    tags: [ 'cqs_routing.request_decoder' ]

  # DTO constructors
  DigitalCraftsman\CQSRouting\DTOConstructor\SerializerDTOConstructor:
    autowire: true
    autoconfigure: true
    tags: [ 'cqs_routing.dto_constructor' ]

  # Handler wrappers
  DigitalCraftsman\CQSRouting\HandlerWrapper\SilentExceptionWrapper:
    autowire: true
    autoconfigure: true
    tags: [ 'cqs_routing.handler_wrapper' ]

  # Response constructors
  DigitalCraftsman\CQSRouting\ResponseConstructor\EmptyJsonResponseConstructor:
    autowire: true
    autoconfigure: true
    tags: [ 'cqs_routing.response_constructor' ]

  DigitalCraftsman\CQSRouting\ResponseConstructor\EmptyResponseConstructor:
    autowire: true
    autoconfigure: true
    tags: [ 'cqs_routing.response_constructor' ]

  DigitalCraftsman\CQSRouting\ResponseConstructor\SerializerJsonResponseConstructor:
    autowire: true
    autoconfigure: true
    tags: [ 'cqs_routing.response_constructor' ]

  DigitalCraftsman\CQSRouting\ResponseConstructor\StreamedResponseConstructor:
    autowire: true
    autoconfigure: true
    tags: [ 'cqs_routing.response_constructor' ]

  # Service map
  DigitalCraftsman\CQSRouting\ServiceMap\ServiceMap:
    autowire: true
    autoconfigure: true

  # Route configuration builder
  DigitalCraftsman\CQSRouting\Routing\RouteConfigurationBuilder:
    arguments:
      $defaultRequestValidatorClassesForCommand: '%cqs_routing.command.default_request_validator_classes%'
      $defaultRequestDecoderClassForCommand: '%cqs_routing.command.default_request_decoder_class%'
      $defaultRequestDataTransformerClassesForCommand: '%cqs_routing.command.default_request_data_transformer_classes%'
      $defaultDTOConstructorClassForCommand: '%cqs_routing.command.default_dto_constructor_class%'
      $defaultDTOValidatorClassesForCommand: '%cqs_routing.command.default_dto_validator_classes%'
      $defaultHandlerWrapperClassesForCommand: '%cqs_routing.command.default_handler_wrapper_classes%'
      $defaultResponseConstructorClassForCommand: '%cqs_routing.command.default_response_constructor_class%'
      $defaultRequestValidatorClassesForQuery: '%cqs_routing.query.default_request_validator_classes%'
      $defaultRequestDecoderClassForQuery: '%cqs_routing.query.default_request_decoder_class%'
      $defaultRequestDataTransformerClassesForQuery: '%cqs_routing.query.default_request_data_transformer_classes%'
      $defaultDTOConstructorClassForQuery: '%cqs_routing.query.default_dto_constructor_class%'
      $defaultDTOValidatorClassesForQuery: '%cqs_routing.query.default_dto_validator_classes%'
      $defaultHandlerWrapperClassesForQuery: '%cqs_routing.query.default_handler_wrapper_classes%'
      $defaultResponseConstructorClassForQuery: '%cqs_routing.query.default_response_constructor_class%'

  # Controllers
  DigitalCraftsman\CQSRouting\Controller\CommandController:
    autoconfigure: true
    autowire: true
    tags: [ 'controller.service_arguments' ]

  DigitalCraftsman\CQSRouting\Controller\QueryController:
    autoconfigure: true
    autowire: true
    tags: [ 'controller.service_arguments' ]
